缓存雪崩、击穿、穿透

1、Redis雪崩
    首页所有的Key失效时间都是12个小时，中午12点刷新的，我零点有个秒杀活动大量用户涌入，假设当时每秒6000个请求，本来缓存可以抗住每秒5000个请求，但是缓存当时所有的Key都失效了。此时1秒6000个请求全部落数据库，数据库必然扛不住，它会报一下警，真实情况可能DBA都没反应过来就直接挂了。此时如果没用特别的方案来处理故障，DBA很着急，重启数据库，但是数据库立马又被新的流量给打死。
    同一时间大面积失效，那一瞬间Redis跟没有一样，如果没做熔断等策基本上就是瞬间挂一片，怎么重启用户都会直接打挂，等能重启的时候，用户已经停止了访问。

2、怎么应对缓存雪崩？
    处理缓存很简单，在批量往Redis存数据的时候，把每个Key的失效时间都加个随机值就好了，这样可以保证数据不会在同一时间大面积失效。
    如果Redis是集群服务，将热点数据均匀分布在不同的Redis库中也能避免全部失效的问题。
    或者设置热点数据永远不过期，有更新操作就更新缓存就好了（比如运维更新了首页商品，那就刷新一下缓存，不要设置过期时间），点上首页的数据也可以用这个操作。

3、什么是缓存穿透？跟雪崩有什么区别？
    缓存穿透指缓存和数据库中都没有的数据，而用户不断发起请求，我们数据的id都是1开始自增的，如发起id值为-1的或id为特别大不存在的数据，这时的用户可能是攻击者，攻击会导致数据库压力过大，严重会击垮数据库。
    缓存击穿跟缓存雪崩有点像，但是又不太一样，缓存雪崩是因为大面积的缓存失效，打崩了DB，而缓存击穿不同的是指一个key非常热点，在不停的扛着大并发，大并发集中对这一个点进行访问，当这一个key在失效的瞬间，持续的大并发就穿破缓存，直接请求数据库，就像在一个无损的桶上凿开了一个洞。

4、分别怎么解决？
    缓存穿透我会在接口层增加校验，比如用户鉴权校验，参数做校验，不合法的参数直接代码return，比如：id做基础校验，id<=0的直接拦截。
    从缓存取不到的数据，在数据库中也没有取到，这个时候可以将对应Key的Value对写为null、位置错误、稍后重试等、缓存有效期可以设置短一点，如30秒。
    这样可以防止攻击用户反复用一个id暴力攻击。

5、除此之外还有其他办法吗？
    Redis还有一个高级用法布隆过滤器（Bloom Filter）这个也能很好的防止缓存穿透的发生，原理就是利用高效的数据结构和算法快速判断出这个Key是否在数据库中存在，不存在你直接return就好了，存在就查了DB刷新KV再return。
    缓存击穿，设置热点数据永远不过期，或者加上互斥锁。