#(1)、迭代器是一个更抽象的概念，任何对象，如果它的类有next方法和iter方法返回本身。对于string、list、dict、tuple等这类容器对象，使用for循环遍历很方便，在后台for语句对容器对象调用iter()函数，iter()函数是python的一个定义了next()方法的迭代器对象，它在容器中逐个访问容器内元素，next()会抛出一个Stoplteration异常


#(2)、生成器是创建迭代器的简单而强大的工具。它们写起来就像是正规的函数，只是在需要返回数据的时候使用yield语句。每次next()被调用时，生成器会返回它脱离的位置（它记忆语句最后一次执行的位置和所有的数据值）

#区别：生成器能做到迭代器能做的所有事，而且因为自动创建了__iter__()和next()方法，生成器显得特别简洁，而且生成器也是高效的，使用生成器表达式取代列表解析可以同时节省内存，除了创建和保存程序状态的自动方法，当生成器终结时，还会自动抛出Stoplterations异常。